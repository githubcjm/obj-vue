{"remainingRequest":"I:\\1905code\\Vue\\obj\\tes\\objcets\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\1905code\\Vue\\obj\\tes\\objcets\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"I:\\1905code\\Vue\\obj\\tes\\objcets\\src\\views\\Login.vue","mtime":1565434410336},{"path":"I:\\1905code\\Vue\\obj\\tes\\objcets\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\1905code\\Vue\\obj\\tes\\objcets\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\1905code\\Vue\\obj\\tes\\objcets\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\1905code\\Vue\\obj\\tes\\objcets\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\1905code\\Vue\\obj\\tes\\objcets\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      phone: \"\",\r\n      pas: \"\",\r\n      istrue: true,\r\n      cookie: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    //登录\r\n    async changelogin() {\r\n      this.cookie = document.cookie.slice(this.phone.length + 1);\r\n      //点击登录时把用户名和密码发到后端做请求，后端返回数据，并且根据用户名生成令牌存到cookie\r\n      //前端接到数据和令牌，判断是否登录，和把令牌存到前端cookie，第二次登录时，前端发送令牌给后端\r\n      //后端根据令牌返回是否登录\r\n      if (this.phone && this.pas) {\r\n        //非空\r\n        if (this.cookie && this.pas) {\r\n          // console.log(this.cookie);\r\n          // console.log(this.phone);\r\n\r\n          //第二次发送\r\n          this.$axios({\r\n            method: \"post\",\r\n            //headers: { \"content-type\": \"application/x-www-form-urlencoded\" },//局部更改\r\n            url: \"http://localhost:3000/sign/login\",\r\n            data: this.$qs.stringify({\r\n              //用户id或者用令牌\r\n              token: this.cookie,\r\n              phone: this.phone\r\n            })\r\n          }).then(res => {\r\n            if (res.data.length > 0) {\r\n              //登录成功\r\n              // this.$router.push({\r\n              //   name: \"home\"\r\n              // });\r\n              this.cookie = res.data;\r\n              // console.log(res.length);\r\n              console.log(document.cookie.slice(this.phone.length));\r\n\r\n              alert(\"登录成功\");\r\n            } else {\r\n              console.log(document.name);\r\n              alert(\"登录失败\");\r\n              console.log(res);\r\n              // console.log(this.cookie + \"=\");\r\n              //登录失败\r\n            }\r\n          });\r\n        } else {\r\n          // console.log(document.cookie.slice(this.phone.length));\r\n\r\n          //第一次发送\r\n          this.$axios({\r\n            method: \"post\",\r\n            headers: { \"content-type\": \"application/x-www-form-urlencoded\" }, //局部更改\r\n            url: \"http://localhost:3000/sign/login\",\r\n            data: this.$qs.stringify({\r\n              phone: this.phone,\r\n              pas: this.pas\r\n            })\r\n          }).then(res => {\r\n            //登录成功，后端把数据传到前端，前端把令牌存到cookie里,其他页面根据cookie里的值\r\n  7          //显示登录状态，现在的问题是前端可以发送请求到后端，并且后端有数据反馈，但是后端传到\r\n            //前端时发生跨域故障，解决了跨域问题，就能把注册登录做完\r\n            if (res) {\r\n              //接受到后端返回的token存到cookie里\r\n              //设置cookie\r\n              this.$router.push({\r\n                name: \"home\"\r\n              });\r\n              this.cookie = res.data;\r\n              alert(\"登录成功\");\r\n            }\r\n            setTimeout(() => {\r\n              //设置cookie\r\n              this.cookie = res.data;\r\n              var now = new Date();\r\n              now.setDate(now.getDate() + 10);\r\n              document.cookie =\r\n                this.phone +\r\n                \"=\" +\r\n                this.cookie +\r\n                \";expires=\" +\r\n                now.toUTCString() +\r\n                \";path=/\"; //设置一个站点内的文件可以共享此cookie\r\n            }, 100);\r\n            // console.log(this.cookie);\r\n          });\r\n        }\r\n      } else {\r\n        //为空\r\n        alert(\"请输入手机号码或密码\");\r\n      }\r\n    },\r\n    change() {\r\n      this.$router.push({\r\n        name: \"home\"\r\n      });\r\n    }\r\n  },\r\n  async created() {\r\n    //获取cookie值\r\n    // this.cookie = document.cookie.slice(this.phone.length + 1);\r\n    // console.log(this.cookie);\r\n    //name=malin; pwd=123456\r\n    // var arr = cookies.split(\"; \"); //['name=malin','pwd=123456']\r\n    // for (var i = 0; i < arr.length; i++) {\r\n    //   var arr2 = arr[i].split(\"=\"); //['name','malin'\r\n    //   if (this.phone == arr2[0]) {\r\n    //     return arr2[1];\r\n    //   }\r\n    // }\r\n    // this.cookie = arr2[1];\r\n  }\r\n};\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 头部 -->\r\n    <div class=\"header-float\">\r\n      <div class=\"left\">\r\n        <a href=\"javascript:;\" class=\"more mores\" @click=\"change\"></a>\r\n      </div>\r\n      <div class=\"center\" style=\"font-size:20px;\">免费注册登录</div>\r\n      <div class=\"right\">\r\n        <router-link to=\"/tabbar/home\">\r\n          <a class=\"cart\">\r\n            <em id=\"top_cart_v2\">0</em>\r\n          </a>\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n    <!-- 注册登录 -->\r\n    <van-cell-group>\r\n      <van-field v-model=\"phone\" required clearable placeholder=\"请输入用户名\" />\r\n      <van-field v-model=\"pas\" type=\"password\" :required=\"istrue\" placeholder=\"请输入密码\"></van-field>\r\n    </van-cell-group>\r\n\r\n    <!-- 底部 -->\r\n    <table width=\"86%\" style=\"margin: 0 auto;\">\r\n      <tbody>\r\n        <tr>\r\n          <td align=\"center\" colspan=\"2\">\r\n            <a class=\"btn10\" @click=\"changelogin\">登&nbsp;录</a>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td align=\"left\">\r\n            <br />\r\n            <a\r\n              href=\"javascript:;\"\r\n              style=\"text-decoration:underline;\"\r\n              onclick=\"javascript:servicePopupShow();\"\r\n            >有问题？联系客服</a>\r\n          </td>\r\n          <td align=\"right\">\r\n            <br />\r\n            <a\r\n              href=\"user.php?act=user_login&amp;back_url=user.php\"\r\n              style=\"font-size:15px;text-decoration:underline;\"\r\n            >使用账号密码登录</a>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      phone: \"\",\r\n      pas: \"\",\r\n      istrue: true,\r\n      cookie: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    //登录\r\n    async changelogin() {\r\n      this.cookie = document.cookie.slice(this.phone.length + 1);\r\n      //点击登录时把用户名和密码发到后端做请求，后端返回数据，并且根据用户名生成令牌存到cookie\r\n      //前端接到数据和令牌，判断是否登录，和把令牌存到前端cookie，第二次登录时，前端发送令牌给后端\r\n      //后端根据令牌返回是否登录\r\n      if (this.phone && this.pas) {\r\n        //非空\r\n        if (this.cookie && this.pas) {\r\n          // console.log(this.cookie);\r\n          // console.log(this.phone);\r\n\r\n          //第二次发送\r\n          this.$axios({\r\n            method: \"post\",\r\n            //headers: { \"content-type\": \"application/x-www-form-urlencoded\" },//局部更改\r\n            url: \"http://localhost:3000/sign/login\",\r\n            data: this.$qs.stringify({\r\n              //用户id或者用令牌\r\n              token: this.cookie,\r\n              phone: this.phone\r\n            })\r\n          }).then(res => {\r\n            if (res.data.length > 0) {\r\n              //登录成功\r\n              // this.$router.push({\r\n              //   name: \"home\"\r\n              // });\r\n              this.cookie = res.data;\r\n              // console.log(res.length);\r\n              console.log(document.cookie.slice(this.phone.length));\r\n\r\n              alert(\"登录成功\");\r\n            } else {\r\n              console.log(document.name);\r\n              alert(\"登录失败\");\r\n              console.log(res);\r\n              // console.log(this.cookie + \"=\");\r\n              //登录失败\r\n            }\r\n          });\r\n        } else {\r\n          // console.log(document.cookie.slice(this.phone.length));\r\n\r\n          //第一次发送\r\n          this.$axios({\r\n            method: \"post\",\r\n            headers: { \"content-type\": \"application/x-www-form-urlencoded\" }, //局部更改\r\n            url: \"http://localhost:3000/sign/login\",\r\n            data: this.$qs.stringify({\r\n              phone: this.phone,\r\n              pas: this.pas\r\n            })\r\n          }).then(res => {\r\n            //登录成功，后端把数据传到前端，前端把令牌存到cookie里,其他页面根据cookie里的值\r\n  7          //显示登录状态，现在的问题是前端可以发送请求到后端，并且后端有数据反馈，但是后端传到\r\n            //前端时发生跨域故障，解决了跨域问题，就能把注册登录做完\r\n            if (res) {\r\n              //接受到后端返回的token存到cookie里\r\n              //设置cookie\r\n              this.$router.push({\r\n                name: \"home\"\r\n              });\r\n              this.cookie = res.data;\r\n              alert(\"登录成功\");\r\n            }\r\n            setTimeout(() => {\r\n              //设置cookie\r\n              this.cookie = res.data;\r\n              var now = new Date();\r\n              now.setDate(now.getDate() + 10);\r\n              document.cookie =\r\n                this.phone +\r\n                \"=\" +\r\n                this.cookie +\r\n                \";expires=\" +\r\n                now.toUTCString() +\r\n                \";path=/\"; //设置一个站点内的文件可以共享此cookie\r\n            }, 100);\r\n            // console.log(this.cookie);\r\n          });\r\n        }\r\n      } else {\r\n        //为空\r\n        alert(\"请输入手机号码或密码\");\r\n      }\r\n    },\r\n    change() {\r\n      this.$router.push({\r\n        name: \"home\"\r\n      });\r\n    }\r\n  },\r\n  async created() {\r\n    //获取cookie值\r\n    // this.cookie = document.cookie.slice(this.phone.length + 1);\r\n    // console.log(this.cookie);\r\n    //name=malin; pwd=123456\r\n    // var arr = cookies.split(\"; \"); //['name=malin','pwd=123456']\r\n    // for (var i = 0; i < arr.length; i++) {\r\n    //   var arr2 = arr[i].split(\"=\"); //['name','malin'\r\n    //   if (this.phone == arr2[0]) {\r\n    //     return arr2[1];\r\n    //   }\r\n    // }\r\n    // this.cookie = arr2[1];\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n.van-cell-group {\r\n  width: 350px;\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 50px;\r\n}\r\ntable {\r\n  position: absolute;\r\n  top: 142px;\r\n  left: 22px;\r\n}\r\na {\r\n  font-weight: normal;\r\n  color: #726964;\r\n}\r\n</style>\r\n\r\n"]}]}